@layout('layout/master')

@section('content')
<h2 class="title">{{ title }}</h2>
<div class="defect__content">
  @forms.post({
    action: route(options.routePath.savePath, {id: options.idData}),
    uploadFile: true
  })
    <div class="form__content form__content-column">
      @!inputs.select({
        label: 'Выберите тип дефекта',
        labelPositionText: 'label__text_left',
        name: 'defect_type',
        optionClass: 'searchable-list',
        defaultOptionConfig: {
          defaultOption: true,
          defaultOptionText: 'Выберите тип дефекта'
        },
        dataOptionsConfig: {
          dataOptions: typeDefects,
          dataNameOption: 'type_defect'
        },
        currentDataConfig: {
          currentData: defectSerialize ? defectSerialize : '',
          currentDataId: defectSerialize ? defectSerialize.id_type_defect : '',
        }
      })

      @!inputs.select({
        label: 'Выберите объект',
        labelPositionText: 'label__text_left',
        name: 'substation',
        optionClass: 'input__substation searchable-list',
        defaultOptionConfig: {
          defaultOption: true,
          defaultOptionText: 'Выберите объект'
        },
        dataOptionsConfig: {
          dataOptions: substations,
          dataNameOption: 'name'
        },
        currentDataConfig: {
          currentData: defectSerialize ? defectSerialize : '',
          currentDataId: defectSerialize ? defectSerialize.id_substation : '',
        }
      })

      @!inputs.select({
        label: 'Выберите присоединение',
        labelPositionText: 'label__text_left',
        name: 'accession',
        optionClass: 'input__accession searchable-list',
        defaultOptionConfig: {
          defaultOption: true,
          defaultOptionText: 'Выберите присоединение'
        },
        dataOptionsConfig: {
          dataOptions: accessionSubstations,
          dataNameOption: 'name'
        },
        currentDataConfig: {
          currentData: defectSerialize ? defectSerialize : '',
          currentDataId: defectSerialize ? defectSerialize.id_accession : '',
        }
      })

      @!inputs.textarea({
        label: 'Описание дефекта',
        labelPositionText: 'label__text_left',
        name: 'description_defect',
        rows: 8,
        placeholderText: 'Введите описание дефекта...',
        required: true,
        value: defectSerialize ? defectSerialize.description_defect : ''
      })

      @!inputs.fileManager({
        label: 'Прикрепить изображение',
        labelPositionText: 'label__text_left',
        name: 'defect_img[]',
        multiple: true,
        acceptData: '.png, .jpeg, .jpg',
      })

      @!notification.message({
        messageText: 'Расширения для изображения(jpg, png, jpeg), размер не больше 1мб.',
        optionClass: 'message-text_red'
      })

      @!inputs.checkbox({
        label: 'Важность устранения дефекта',
        classlabel: 'form__label-row',
        classLabelText: 'label__text_nomargin',
        name: 'importance',
        checked: defectSerialize ? defectSerialize.importance : null
      })
    </div>
    <div class="form__btns">
      @buttons.cancel({ href: 'defects.index' })
        Отмена
      @end

      @buttons.save({ type: 'submit'})
        Сохранить
      @end
    </div>
  @end
</div>
@endsection
