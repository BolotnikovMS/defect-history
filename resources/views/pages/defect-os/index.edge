@layout('layout/master')

@section('content')
  <h2 class="title">{{ title }}</h2>
  <div class="control control-items_sb">
    <div class="control__btns">
      @can('DefectTMPolicy.create')
        @buttons.add({ href: 'defects-os.create' })
          Добавить
        @end
      @endcan
    </div>
    @!component('pages/defect-os/components/filters/filtersDefectOS', {
      filters,
    })
  </div>
  <div class="defect__content">
    <hr>
    @if(defectsOs.length)
      <div class="cards defect__cards">
        @each(defectOs in defectsOs)
          @card.card({
            optionalClasses: defectOs.elimination_date !== null ?
            'card-completed' :
            new Date(defectOs.term_elimination) < new Date() ? 'card-danger' : defectOs.importance===true ? 'card-danger' : ''
          })
          @slot('cardHeader')
            <div class="card__header-content">
              @card.cardGroup({ optionalClasses: 'card__group-cg_15'})
              @if(defectOs?.substation)
                <a href="{{ route('substations.show', {id: defectOs.substation.id}) }}" class="active-link">
                  {{ defectOs.substation.name }}
                  <img src="{{ asset('assets/images/icons/link.svg') }}">
                </a>
              @endif
              @!card.cardSpan({ text: defectOs.accession_substations, optionalClasses: 'card__text' })
                  @if(defectOs?.departments?.length)
                    <span class="card__text">
                      Ответственный:
                      @each(department in defectOs.departments)
                        @!badge.badge({
                          badgeContentOptionalClasses: 'badge__content-pad_48 badge__content-bgc_lightorg',
                          data: department.name
                        })
                      @end
                    </span>
                  @end
                @end
                @card.cardGroup()
                  @!card.cardSpan({ text: defectOs.user.shortUserName, optionalClasses: 'card__text' })
                @end
              </div>
            @end
            @slot('cardBody')
              <div class="card__body-content">
                <p class="card__text card__text-fs_20">
                  {{ defectOs.excerptText }}
                </p>
                <div class="card__data-info">
                  @card.cardGroup()
                    @!card.cardSpan({ text: 'Дата добавления:', optionalClasses: 'card__text card__text-bold' })
                    @!card.cardSpan({ text: dateFormat(defectOs.created_at), optionalClasses: 'card__text' })
                  @end
                  @card.cardGroup()
                    @!card.cardSpan({ text: 'Срок устранения:', optionalClasses: 'card__text card__text-bold' })
                    @!card.cardSpan({ text: dateFormat(defectOs.term_elimination), optionalClasses: 'card__text' })
                  @end
                  @card.cardGroup()
                    @!card.cardSpan({ text: 'Дата устранения:', optionalClasses: 'card__text card__text-bold' })
                    @!card.cardSpan({
                      text: defectOs.elimination_date === null ? 'Не устранен' : dateFormat(defectOs.elimination_date),
                      optionalClasses: defectOs.elimination_date === null ? 'card__text card__text-red' : 'card__text'
                    })
                  @end
                </div>
              </div>
            @end
            @slot('cardFooter')
              <div class="card__footer-content">
                @card.cardGroup()
                  @buttons.base({
                    href: 'defects-os.show',
                    params: {id: defectOs.id},
                    className: 'btn-small btn-color_blue ',
                  })
                    Подробнее...
                  @end
                @end
                @card.cardGroup()
                  @if(!await bouncer.with('DefectOSPolicy').denies('update', defectOs) || !await
                    bouncer.with('DefectOSPolicy').denies('delete', defectOs))
                    @dropdown.dropdown({
                      classBtnDropdown: 'btn-dropdown-icon',
                      dropdownData: [
                        { name: 'Редактировать', access: 'DefectOSPolicy.update', data: defectOs, path: 'defects-os.edit', params: { id: defectOs.id }, icon: 'edit' },
                        { name: 'Удалить', access: 'DefectOSPolicy.delete', data: defectOs, path: 'defects-os.destroy', params: { id: defectOs.id }, icon: 'delete' },
                      ],
                    })
                      @!icons.menu()
                    @end
                  @endif
                @end
              </div>
            @end
          @end
        @endeach
      </div>
    @else
      @!notification.nocontent({ messageNoData: 'Пока нет добавленых дефектов по основным сетям.' })
    @end
    <hr>
  </div>
  @!component('components/pagination', {
    pagination: defectsOs,
  })
@endsection
