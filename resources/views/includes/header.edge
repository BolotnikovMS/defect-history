<header class="header">
  <div class="container">
    <div class="header-row">
      <div class="header__logo">
        <img src="{{ asset('assets/images/icons/journal.svg') }}" alt="Журнал">
      </div>
      {{-- <nav class="header__nav">
        <ul>
          @each(menuItem in menu)
          <li>
            <a href="{{ route(menuItem.url) }}" class="{{ menuItem.url == activeMenuLink ? 'active' : '' }}">{{
              menuItem.name }}</a>
          </li>
          @endeach
        </ul>
      </nav> --}}
      <nav class="header__nav">
        <ul class="nav-list">
<<<<<<< HEAD
          @if(!await bouncer.denies('viewDefectOS'))
=======
          <li  class="nav-list__item">
            <a href="{{ route('dashboard.index') }}"
              class="{{ 'dashboard.index' == activeMenuLink ? 'active' : '' }}">Статистика</a>
          </li>
>>>>>>> feat/dashboard
            @dropdown.dropdown({
              classDropdownMenu: 'dropdown__menu-menu_bottom',
              dropdownData: [
                { name: 'Дефекты ТМ', path: 'defects.index' },
                { name: 'Дефекты ОС', access: 'viewDefectOS', path: 'defects-os.index' },
              ],
            })
              Дефекты
              <img src="{{ asset('assets/images/icons/arrow-down.svg') }}" class="dropdown-icon">
            @end
          @else
            <li  class="nav-list__item">
              <a href="{{ route('defects.index') }}"
                class="{{ 'defects.index' == activeMenuLink ? 'active' : '' }}">Дефекты ТМ</a>
            </li>
          @end
          @can('viewTypesDefects')
            <li  class="nav-list__item">
              <a href="{{ route('types-defects.index') }}"
                class="{{ 'types-defects.index' == activeMenuLink ? 'active' : '' }}">Типы дефектов</a>
            </li>
          @endcan
          @if(!await bouncer.denies('viewDistrict') || !await bouncer.denies('viewSubstations'))
            @dropdown.dropdown({
              classDropdownMenu: 'dropdown__menu-menu_bottom',
              dropdownData: [
                { name: 'РЭС и ГП', access: 'viewDistrict', path: 'districts.index' },
                { name: 'Список ПС', access: 'viewSubstations', path: 'substations.index' },
              ],
            })
              РЭС и ГП
              <img src="{{ asset('assets/images/icons/arrow-down.svg') }}" class="dropdown-icon">
            @end
          @endif

          @if(!await bouncer.denies('viewDepartment') || !await bouncer.denies('viewUsers') || !await bouncer.denies('viewPermissions') || !await bouncer.denies('viewDistributionGroup'))
            @dropdown.dropdown({
              classDropdownMenu: 'dropdown__menu-menu_bottom',
              dropdownData: [
                { name: 'Отделы', access: 'viewDepartment', path: 'departments.index' },
                { name: 'Пользователи', access: 'viewUsers', path: 'users.index' },
                { name: 'Права', access: 'viewPermissions', path: 'permissions.index' },
                { name: 'Группы рассылок', access: 'viewDistributionGroup', path: 'distribution.index' },
              ],
            })
              Пользователи
              <img src="{{ asset('assets/images/icons/arrow-down.svg') }}" class="dropdown-icon">
            @end
          @endif
          @if(!await bouncer.denies('viewReportSubstationDefects') || !await bouncer.denies('viewReportDistrictDefects') || !await bouncer.denies('viewReportAllDefects'))
            @dropdown.dropdown({
              classDropdownMenu: 'dropdown__menu-menu_bottom',
              dropdownData: [
                { name: 'Список дефектов ПС', access: 'viewReportSubstationDefects', path: 'reports.show.substation.defects' },
                { name: 'Список дефектов РЭС или ГП', access: 'viewReportDistrictDefects', path: 'reports.show.district.defects' },
                { name: 'Список дефектов по всем ПС', access: 'viewReportAllDefects', path: 'reports.show.all.defects' },
              ],
            })
              Отчеты
              <img src="{{ asset('assets/images/icons/arrow-down.svg') }}" class="dropdown-icon">
            @end
          @endif
        </ul>
      </nav>
      <div class="header__login">
        @if(auth.user)
          @dropdown.dropdown({
            classDropdownMenu: 'dropdown__menu-menu_bottom',
            dropdownData: [
              { name: 'Профиль', path: 'users.profile', params: {idUser: auth.user.id}, icon: 'profile.svg' },
              { name: 'Сменить пароль', path: 'users.change.password', icon: 'key.svg' },
            ],
            dropdownLogout: true,
          })
            @!icons.user({ optionalClasses: 'icon-size_20' })
            {{ auth.user.surname }} {{ auth.user.name[0] }}. {{ auth.user.patronymic[0] }}.
            <img src="{{ asset('assets/images/icons/arrow-down.svg') }}" class="dropdown-icon">
          @end
        @else
          @buttons.base({ href: 'auth.login.show', className: 'btn-small btn-color_blue btn-signup' })
            <img src="{{ asset('assets/images/icons/login-3.svg') }}" alt="Войти">
            Войти
          @end
        @endif
      </div>
    </div>
  </div>
</header>
